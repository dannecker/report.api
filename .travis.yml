language: elixir
cache:
  directories:
    - deps
    - _build
services:
  - docker
  - postgresql
addons:
  postgresql: "9.5"
  apt:
    packages:
      - postgresql-9.5-postgis-2.3
elixir:
  - 1.4.4
otp_release:
  - 19.3
env:
  global:
    - MIX_ENV=test
    # Set this to `true` if you want to require each commit to be semver-tagged with [major], [minor] or [patch] tags.
    - REQUIRE_VERSION_TAGS="false"
    # Main branch that will build new releases by-default
    - TRUNK_BRANCH="master"
    # Docker Hub token
    - DOCKER_HUB_ACCOUNT=edenlabllc
    - secure: "P3zPrTcFnNJv/S6fEwg0rSywqPFU1+k6tORdSYjR932frlYAHhEVausKeqMAd8ny55hmWJT8BHBdWELwoz3el5EaDP+o/A29cV3aSPP4ng2RHo19QWnz2ha8al2f/orfDtZwlV0sFuUJzZAEPgXjgMlbICrRIwQWQEIwXNxVpCajPhCVlysnMUUhlOrQK4HrNqU+TGoCIyU6jXlYGep84BAD+23LgYc5e65Jbx3xIMr61Kd81OS+mbHmnrw0cptcRqvH94xd/p8Z+J6XsUksqvQMeo+HNoIh8l1qUWSnrVvPFLXHevrYqwKPlAKlmlGn7lDJcq9c8oJ6OcGxkrilSsldUvqFgytUpQtCCS8Y6ys2a6oEvwQj9KUWqw49oBTPnHFtC/+CVy94ovaMTY9c0nD4n7OYn7uElJOJGuGebX0ilLVIyQOZn6I9M330AuMh0WDR09UZK1ktnYZOs7teyYJXZ22qoNQZmZqHqUMMw6u2mz8oRsrLvuXXhQWNvstH2iveMM365SAk4vIv5EngEMm+pWpi4FGs1QYj8utRGfo6bWN4Jx1pJwnGji1kbCCYqThH4CZpMs/J3NneWfGbAf6lOoD8tzDZrUAKGI81ea4KlwYIjGNltTQe6LhjUud3hUcuhZp7E1F97Fi2xvodfjZ+QnsxRUzf+hZXVwhD0GI="
    # GitHub Token
    - secure: "YwKdyLvK32mVP++ZosAXPG3dt0XlqxTsxgNWJWRwCZhIuSMnxAlEhq/y4mcKc/yzkSwYHAxoRloF4ZfmW36v/uXAgcYl00E1ASDMTiFTvh1LyF45KdpZDKYcyG88UF4f5FqvyFe4XeyCXZh2gsOo+u+2DfL1PF22kB79Xt7JZtZNuou2P8PkL50evZ3xp6g1neLyOrlj/+3BXsbkI95UHUDo3GMsHZQbLOB7zE2UYNuuwiuzNXAdeKiSyOFuVvw/5QlfrY7n0xSNZXPBNNxgU/keN+nXl8IeXiVkSrhVgp9V4i3mF6cVQtU3tlRQ+kbE29biutlOXOUPQsS1UCO0RIodwZWdgB8HGbuV1X+5LGViRQ27h06q2F7uM2ustriHmNL8Rsx8qggm6FfmLRJew49jUyNNlPJ3OUnmhsRUBgOd7iDWeF336WpVIBugFvzXj6/MzcJrwLKs7Z/fwNq/HW1H7VugqSzM06xvnhWHRqgRTIvu2eUdPOVCgti+83bwy3xFiVrx8YOn2SJ+//6g8AteGvWAWkjTS3i6NhHwj3pB7RB3erAqnleLH1cNa8NGsP/3i+eWhQPGhjG/4jAyosS/Qf3nfutuzVndDma6DpYi1CCoOo18ihLFPfm0Unrmr+OlzjyW5Bog6n2yRynkxhkwsZ4/0FZTKlM3Hw0WOXI="
branches:
  # Releases are generated automatically, stop infinite build loop
  except:
    - /^[0-9]*\.[0-9]*\.[0-9]*/
before_install:
  - rm -f erlang-19.3-nonroot.tar.bz2
  - rm -f v1.4.4.zip
  # Expose MQ and DB to Docker container
  - sudo ./bin/ci/init-db.sh
before_script:
  # Extract project name and version from mix.exs
  - source ./bin/ci/release/fetch-project-environment.sh
  # Load information about new version
  - source ./bin/ci/release/fetch-source-version.sh
  # Load information about changelog
  - source ./bin/ci/release/fetch-changelog.sh
script:
  # Increment version in mix.exs
  - ./bin/ci/release/put-source-version.sh
  # Run all tests except pending ones
  - mix test --exclude pending --trace
  # Submit code coverage report to Coveralls
  # Add --pro if you using private repo.
  - mix coveralls.travis --exclude pending
  # Run static code analysis
  - mix credo --strict
  # Check code style
  - mix dogma
  # Build Docker container
  - ./bin/ci/release/build-container.sh
  # Initialize DB for Docker container
  - source .env; PGPASSWORD="${DB_PASSWORD}"; psql -U ${DB_USER} -w -c"CREATE DATABASE ${DB_NAME}"
  # Run Docker container
  - ./bin/ci/release/start-container.sh
  - sleep 5
  - docker ps
  - RUNNING_CONTAINERS=`docker ps | wc -l`;
    if [ "${RUNNING_CONTAINERS//[[:space:]]/}" == "1" ]; then
      echo "[E] Container is not started\!";
      docker logs report_api --details --since 5h;
      exit 1;
    fi;
  # Run acceptance tests on Docker container
  # - "CONTAINER_HTTP_HOST=localhost CONTAINER_HTTP_PORT=4000 mix test test/acceptance"
after_failure:
  - docker logs report_api --details --since 5h
after_success:
  - ./bin/ci/release/push-changes.sh
# Also you can
# - automatically build images and push them to Docker Hub;
# - create new git tag with build version and GitHub release on it.
#
# 1, Encrypt your docker user name and password and add to environment variables:
#
#   $ travis encrypt DOCKER_USERNAME=sample_username DOCKER_PASSWORD=strong_password
#
# More info: https://docs.travis-ci.com/user/encryption-keys/
#
# 2. Add env "DOCKER_HUB_ACCOUNT=org_name" to set Hub's organization or account that will hold images.
# Sample:
#
#   env:
#     global:
#       - DOCKER_HUB_ACCOUNT=org_name # Docker Hub Account or Organization that will hold images
#       - secure: "encrypeted_credentials" # Encrypted credentials to login into Docker Hub
#
# 3. Uncomment following lines:
#
# after_success:
# # Submit Docker container to Docker Hub and create GitHub Release by pushing tag with changelog
#   - ./bin/ci/release/push-changes.sh
#
# 4. If you are using public Travis-CI version it doesn't support deploy keys, so you will need to add a user-token to
# push script manually.
